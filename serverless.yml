# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: myservice
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  name: aws
  runtime: go1.x
:  endpointType: REGIONAL

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: 
        Fn::Join:
                       - ""
                       - - "arn:aws:dynamodb:*:*:table/"
                         - "Ref" : "moviesTable"

# you can define service wide environment variables here
  environment:
    TABLE_NAME: moviesTable

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  findone:
    handler: bin/findone
    events:
      - http:
          path: findone/{id}
          method: get
  findall:
    handler: bin/findall
    events:
      - http:
          path: findall
          method: get
  putitem:
    handler: bin/putitem
    events:
      - http:
          path: putitem
          method: post 
  deleteitem:
    handler: bin/deleteitem
    events:
      - http:
          path: deleteitem/{id}
          method: delete
# you can add CloudFormation resource templates here
resources:
  Resources:
    moviesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: moviesTable
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
